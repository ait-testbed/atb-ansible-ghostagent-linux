---
# tasks file for atb-ansible-ghostagent
- name: Download microsoft repository
  become: true
  ansible.builtin.get_url:
    url: "https://packages.microsoft.com/config/{{ ansible_distribution | lower }}/{{ ansible_distribution_version }}/packages-microsoft-prod.deb"
    dest: "/opt/packages-microsoft-prod.deb"
  tags:
    - install
    - dependencies

- name: Install microsoft repo
  ansible.builtin.apt:
    deb: "/opt/packages-microsoft-prod.deb"
  tags:
    - install
    - dependencies

- name: Install packages for ghost-agent
  become: true
  ansible.builtin.package:
    name: "{{ ghostagent_packages }}"
    update_cache: yes
  tags:
    - install
    - dependencies

- name: Download and unarchive ghosts v8.0.0
  become: true
  become_user: "{{ ghostsagent_user }}"
  ansible.builtin.unarchive:
    src: "https://cmu.box.com/shared/static/tdozbmmdyvajubohwtnon1huyfqjuwrz.zip"
    dest: "{{ ghostagent_path }}"
    remote_src: yes
  tags:
    - install
    - ghostagent

- name: Unarchive ghosts inner zip file
  become: true
  become_user: "{{ ghostsagent_user }}"
  ansible.builtin.unarchive:
    src: "{{ ghostagent_path }}/ghosts-client-linux-v8.0.0.zip"
    dest: "{{ ghostagent_path }}"
    remote_src: yes
  tags:
    - install
    - ghostagent

- name: Clean up zip file
  ansible.builtin.file:
    path: "{{ ghostagent_path }}/ghosts-client-linux-v8.0.0.zip"
    state: absent
  tags:
    - install
    - ghostagent

- name: Rename ghosts folder
  become: true
  become_user: "{{ ghostsagent_user }}"
  ansible.builtin.command:
    cmd: "mv {{ ghostagent_path }}/build_output/ {{ ghostagent_path }}/ghosts/"
  tags:
    - install
    - ghostagent

- name: Update application.json with the ghostsserver url
  become: true
  become_user: "{{ ghostsagent_user }}"
  ansible.builtin.template:
    src: application.json.j2
    dest: "{{ ghostagent_path }}/ghosts/config/application.json"
  tags:
    - install
    - ghostagent

- name: Add ghostagent timeline file
  become: true
  become_user: "{{ ghostsagent_user }}"
  ansible.builtin.template:
    src: "{{ ghostagent_timeline_file }}"
    dest: "{{ ghostagent_path }}/ghosts/config/timeline.json"
  tags:
    - update
    - ghostagent

- name: Download google-chrome-stable
  become: true
  ansible.builtin.get_url:
    url: "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
    dest: "/opt/google-chrome-stable_current_amd64.deb"
  tags:
    - install
    - chrome

- name: Install google-chrome-stable
  become: true
  ansible.builtin.apt:
    deb: "/opt/google-chrome-stable_current_amd64.deb"
  tags:
    - install
    - chrome

- name: Get Chrome version
  become: true
  ansible.builtin.shell:
    cmd: "google-chrome --version | grep -oP '[0-9]+.[0-9]+.[0-9]+.[0-9]+'"
  register: chrome_version
  tags:
    - install
    - chrome

- name: Download and unarchive ChromeDriver
  become: true
  ansible.builtin.unarchive:
    src: "https://storage.googleapis.com/chrome-for-testing-public/{{ chrome_version.stdout }}/linux64/chromedriver-linux64.zip"
    dest: /opt/
    remote_src: yes
  tags:
    - install
    - chrome

- name: Move ChromeDriver to /usr/local/bin and make it executable
  become: true
  ansible.builtin.shell:
    cmd: "mv /opt/chromedriver-linux64/chromedriver /usr/local/bin/ && chmod 0755 /usr/local/bin/chromedriver"
  tags:
    - install
    - chrome

